<?xml version="1.0" encoding="UTF-8"?>

<persistence xmlns="http://java.sun.com/xml/ns/persistence"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
        version="2.0">
  <persistence-unit name="hibernate-h2-persistenceUnit" transaction-type="RESOURCE_LOCAL">
    <!-- mappings -->
    <class>com.github.kaitoy.sneo.giane.model.AdditionalIpV4Route</class>
    <class>com.github.kaitoy.sneo.giane.model.AdditionalIpV4RouteGroup</class>
    <class>com.github.kaitoy.sneo.giane.model.AdditionalIpV6Route</class>
    <class>com.github.kaitoy.sneo.giane.model.AdditionalIpV6RouteGroup</class>
    <class>com.github.kaitoy.sneo.giane.model.FixedIpV4Route</class>
    <class>com.github.kaitoy.sneo.giane.model.FixedIpV6Route</class>
    <class>com.github.kaitoy.sneo.giane.model.IpAddress</class>
    <class>com.github.kaitoy.sneo.giane.model.IpAddressRelation</class>
    <class>com.github.kaitoy.sneo.giane.model.IpV4Route</class>
    <class>com.github.kaitoy.sneo.giane.model.IpV6Route</class>
    <class>com.github.kaitoy.sneo.giane.model.L2Connection</class>
    <class>com.github.kaitoy.sneo.giane.model.Lag</class>
    <class>com.github.kaitoy.sneo.giane.model.LagIpAddressRelation</class>
    <class>com.github.kaitoy.sneo.giane.model.Network</class>
    <class>com.github.kaitoy.sneo.giane.model.Node</class>
    <class>com.github.kaitoy.sneo.giane.model.PhysicalNetworkInterface</class>
    <class>com.github.kaitoy.sneo.giane.model.PhysicalNetworkInterfaceIpAddressRelation</class>
    <class>com.github.kaitoy.sneo.giane.model.RealNetworkInterface</class>
    <class>com.github.kaitoy.sneo.giane.model.RealNetworkInterfaceConfiguration</class>
    <class>com.github.kaitoy.sneo.giane.model.RealNetworkInterfaceConfigurationIpAddressRelation</class>
    <class>com.github.kaitoy.sneo.giane.model.Simulation</class>
    <class>com.github.kaitoy.sneo.giane.model.SnmpAgent</class>
    <class>com.github.kaitoy.sneo.giane.model.TrapTarget</class>
    <class>com.github.kaitoy.sneo.giane.model.TrapTargetGroup</class>
    <class>com.github.kaitoy.sneo.giane.model.Vlan</class>
    <class>com.github.kaitoy.sneo.giane.model.VlanIpAddressRelation</class>
    <class>com.github.kaitoy.sneo.giane.model.VlanMember</class>

    <properties>
      <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
      <property name="hibernate.connection.driver_class" value="org.h2.Driver"/>
      <property name="hibernate.connection.username" value="giane"/>
      <property name="hibernate.connection.password" value="shingiane"/>
      <!-- property name="hibernate.connection.url" value="jdbc:h2:tcp://localhost:9092/db/giane"/ -->
      <property name="hibernate.connection.url" value="jdbc:h2:./db/giane"/>
      <property name="hibernate.default_schema" value="PUBLIC"/>
      <property name="hibernate.id.new_generator_mappings" value="true"/>

      <!-- uncomment for debug
      <property name="hibernate.show_sql" value="true"/>
      <property name="hibernate.format_sql" value="true"/>
      <property name="hibernate.use_sql_comments" value="true"/>
       -->

      <!-- If DB does not exist hibernate makes it -->
      <property name="hibernate.hbm2ddl.auto" value="update"/>
    </properties>

  </persistence-unit>
</persistence>
